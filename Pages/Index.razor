@page "/"
@inject IJSRuntime JsRuntime;
@using ChessWasm.Models;
@using ChessWasm.Services;
@using ChessWasm.Shared;

<div class="main">
    <button class="btn btn-success btn-start" @onclick="StartGame">New Game</button>

    <div class="boards">
        <div class="main-board">
            <ChessBoard /> 
        </div>
        <div class="bitboards">
            <BitBoard Image="Rook_white" @bind-Bits="@(board.WRookAttacks)" />
            <BitBoard Image="Rook_black" @bind-Bits="@(board.BRookAttacks)" />
            <BitBoard Image="Knight_white" @bind-Bits="@(board.WKnightAttacks)" />
            <BitBoard Image="Knight_black" @bind-Bits="@(board.BKnightAttacks)" />
            <BitBoard Image="Bishop_white" @bind-Bits="@(board.WBishopAttacks)" />
            <BitBoard Image="Bishop_black" @bind-Bits="@(board.BBishopAttacks)" />
            <BitBoard Image="Queen_white" @bind-Bits="@(board.WQueenAttacks)" />
            <BitBoard Image="Queen_black" @bind-Bits="@(board.BQueenAttacks)" />
            <BitBoard Image="King_white" @bind-Bits="@(board.WKingAttacks)" />
            <BitBoard Image="King_black" @bind-Bits="@(board.BKingAttacks)" />
            <BitBoard Image="Pawn_white" @bind-Bits="@(board.WPawnAttacks)" />
            <BitBoard Image="Pawn_black" @bind-Bits="@(board.BPawnAttacks)" />
        </div>
    </div>
</div>

@code {
    Board board = new Board();
    private void StartGame()
    {
        GameService.StartGame();
        board = GameService.CurrentGame.Board;
        GameService.BoardChanged += UpdateBoard;
        MagicService.Initialize();
        this.StateHasChanged();
    }

    private void UpdateBoard(Board board)
    {
        this.StateHasChanged();
    }
}
