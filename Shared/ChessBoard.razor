@namespace ChessWasm.Shared
@using ChessWasm.Models

<div class="board">
    @for(int i = 0; i < 8; i++)
    {
        <div class="board-row">
            @for(int j = 0; j < 8; j++)
            {
                <div class="square @(GetClassForSquare(i, j))">
                    @if(squares != null && !squares[i * 8 + j].HasFlag(Piece.None))
                    {
                        <img src="/assets/@(GetImageForPiece(i, j)).png" />
                    }
                </div>
            }
        </div>
    }
</div>
@code {
    private Piece[] squares;

    [Parameter]
    public Piece[] Squares 
    { 
        get => squares; 
        set 
        {
            if(squares == value) return;
            squares = value;
            SquaresChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<Piece[]> SquaresChanged { get; set; }

    private string GetClassForSquare(int i, int j) 
    {
        return 
            i % 2 == 0 
                ? (j % 2 == 0 ? "square-dark" : "square-light")
                : (j % 2 == 0 ? "square-light" : "square-dark");
    }

    private string GetImageForPiece(int i, int j) 
    {
        Piece piece = squares[i * 8 + j];

        @* Console.WriteLine($"{i * 8 + j}, {(int)piece}, {piece.ToString()}"); *@
        string color = piece.HasFlag(Piece.White) ? "white" : "black";
        return $"{(piece & ~Piece.White).ToString()}_{color}";
    }
}
